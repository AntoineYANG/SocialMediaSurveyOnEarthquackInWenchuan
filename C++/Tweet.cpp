#include<iostream>
#include<sstream>
#include<fstream>
#include<vector>
using namespace std;

string syntax[] = {"??", "???", "??", "\"", "??", "??", "?", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", 
	"??", "?", "?", "??", "??", "??", "??", "??", "??"};

string stopwords[] = {"?", "?", "?", "?", "?", "??", "??", "?", "?", "?", "?", "?", "??", "??",
             "?", "?", "?", "?", "??", "??", "??", "?", "?", "?", "??", "?", "?", "??",
             "??", "??", "?", "?", "?", "??", "??", "??", "?", "??", "??", "?", "??",
             "??", "?", "??", "?", "??", "??", "?", "?", "?", "?", "??", "??", "??",
             "??", "??", "?", "??", "?", "?", "?", "??", "?", "??", "??", "RT", "?",
             "?", "??", "?", "?", "?", "??", "??", "?", "?", "??", "??", "?", "??",
             "??", "??", "?", "?", "?????", "??", "??", "???", "?", "??", "??",
             "??", "??", "??", "??", "?", "????", "?", "????", "#", " ", "!",
             "&", "??", "??", "'", "$", "%", "...", "*", "+", "(", "??", ")", ".", "/", "??", ",",
             "-", "?", "3", "2", "1", "??", "??", "0", "??", "7", "??", "6", "5", "?", "4", ";",
             ":", "??", "9", "8", "??", "?", ">", "??", "=", "<", "??", "@", "A", "?", "??",
             "??", "?", "??", "??", "\\", "\"", "_", "?", "^", "?????", "??", "??", "?",
             "??", "??", "??", "`", "????", "??", "??", "??", "??", "??", "????", "??",
             "??", "??", "??", "?", "??", "?", "?", "?", "~", "??", "|", "??", "??", "??",
             "??", "?", "??", "??", "?", "??", "?", "?", "??", "??", "??", "??", "?",
             "??", "??", "?", "??", "??", "??", "??", "??", "??", "??", "????", "??",
             "?", "???", "??", "?", "??", "??", "??", "??", "??", "?", "??", "??",
             "????", "??", "??", "??", "???", "????", "??", "???", "??", "????",
             "?", "?", "??", "???", "??", "??", "??", "??", "??", "?", "??", "??",
             "?", "??", "?", "??", "??", "?", "????", "??", "??", "??", "??", "??",
             "?", "??", "??", "?", "??", "???", "?", "?", "?", "???", "?", "?", "?",
             "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "??", "??", "?",
             "?", "????", "???", "?", "?", "?", "?", "?", "???", "?", "??", "??", "?",
             "??", "?", "?", "?", "?", "?", "??", "?", "?", "?", "??", "??", "?", "?",
             "?", "?", "??", "????", "??", "??", "??", "?", "????", "?", "??", "??",
             "??", "??", "?", "?", "??", "?", "??", "??", "?", "?", "?", "???", "?",
             "??", "??", "??", "??", "??", "????", "??", "?", "?", "???", "??",
             "??", "?", "???", "?", "?", "??", "?", "??", "?", "?", "????", "??", "???",
             "??", "??", "?", "??", "??", "??", "??", "??", "?", "??", "????", "??", "????", "?", "??", "??",
             "????", "??", "?", "??", "??", "??", "??", "??", "??", "?", "??", "??", "??", "?", "???", "??",
             "?", "??", "??", "?", "??", "????", "??", "?", "?", "?", "??", "?", "??", "?", "??", "?", "??",
             "????", "?", "?", "??", "?", "?", "?", "??", "??", "??", "?", "?", "??", "??", "??", "?", "??",
             "??", "??", "?", "??", "?", "?", "??", "?", "??", "??", "?", "??", "??", "??", "????", "??", "??",
             "?", "?", "???", "?", "??", "??", "??", "?", "???", "??", "??", "?", "?", "?", "?", "??", "??",
             "??", "??", "?", "??", "?##?", "??", "????", "??", "??", "??", "??", "?", "??", "?", "?", "?", "?",
             "????", "??", "?", "??", "??", "??", "?", "?", "?", "??", "?", "??", "?", "???", "??", "??", "??",
             "?", "?", "??", "??", "?", "?", "??", "??", "??", "??", "??", "??",
             "???", "??", "?", "?", "??", "???", "????", "?", "??", "?", "?", "???", "?", "?", "?", "??", "??",
             "??", "??", "?", "??", "??", "???", "??", "??", "?", "???", "?", "?", "??", "?", "??", "?", "?",
             "??", "?", "??", "??", "???", "?", "??", "??", "???", "???", "??", "??", "?", "??", "??", "?",
             "??", "??", "??", "?", "?", "?", "????", "?", "?", "??", "????", "?", "?", "??", "??", "??", "???",
             "?", "??", "??", "??", "??", "?", "?", "?", "??", "?", "??", "?", "??", "??", "?", "??", "??", "?",
             "??", "??", "??", "?", "??", "?", "??", "??", "????", "???", "??", "?", "??...??", "??", "??", "?",
             "????", "??", "??", "??", "??", "?", "??",
             "?", "?", "??", "????", "?", "??", "??", "??", "??", "??", "????", "?", "????", "?", "??", "?",
             "????", "??", "?", "??", "?", "???", "??", "??", "??", "??", "??", "??", "?", "??", "??", "???",
             "?", "?", "?", "??", "?,", "??", "?", "??", "??", "??", "??", "?", "??", "??", "??", "?", "??",
             "?", "??", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??", "????", "???", "??", "??",
             "??", "??", "??", "??", "??", "?", "?", "??", "?", "?", "??", "??", "?", "?", "?", "?", "???",
             "??", "??", "??", "?", "?", "??", "??", "??", "?", "??", "??", "??", "??", "??", "??", "??", "??",
             "???", "??", "????", "????", "??", "??", "??", "?", "??", "?", "??",
             "???", "????", "???", "????", "??", "????", "??", "??", "??", "??", "??", "???", "???", "??",
             "???", "?", "??", "??", "?", "??", "????", "????", "??", "??", "??", "?", "?", "??", "??", "??",
             "??", "??", "?", "?", "??", "??", "??", "??", "??", "???", "??", "??", "??", "?", "??", "??", "?",
             "?", "??", "???", "??", "?", "??", "??", "?", "??", "??", "??", "???", "?", "????", "????", "?",
             "???????", "?", "??", "?", "??", "??", "??", "??", "??", "??", "???", "??", "??", "????", "???",
             "?", "??", "??", "??", "??", "??", "??", "??", "??", "??", "?", "?", "??", "??", "??", "???", "?",
             "  ", "???", "??", "?", "?", "??", "??", "?", "??", "??", "??", "??", "??",
             "??",
             "??", "??", "????", "??", "??", "??", "??", "??", "?", "??", "?", "?", "??", "??", "??", "??",
             "??", "??", "?", "????", "??", "?", "??", "?", "??", "?", "??", " [", "??", " ]", "??", "??",
             "????", "??", "??", "??", "??", "??", "????", "??", "??", "??", "??", "????", "??", "?????", "??",
             "??", "??", "??", "????", "??", "?", "??", "????", "?", "?", "??", "??", "??", "?", "??", "??",
             "?", "??", "?", "??", "??", "????", "????", "??", "?", "??", "??", "?", "??", "??", "??", "??",
             "???", "??", "??", "???", "??", "??", "?", "??", "?", "??", "?", "??", "???", "?", "??", "???",
             "??", "?", "??", "??", "??", "?", "??",
             "??", "?", "??", "????", "??", "???", "?", "???", "????", "???", "??", "??", "???", "??", "??",
             "??", "??", "??", "?", "??", "??", "??", "??", "??", "??", "??", "????", "??", "??", "??", "??",
             "??", "??", "????", "????", "??", "??", "??", "???", "??", "??", "??", "???", "???", "??", "???",
             "??", "????", "?", "??", "??", "??", "??", "??", "??", "??", "????", "??", "??", "??", "?", "???",
             "???", "????", "????", "??", "??", "?", "??", "??", "..", "???", "?", "??", "??", "??", "??", "?",
             "???", "??", "??", "???", "??", "???", "??", "????", "??", "??", "?", "??", "?", "?", "??", "??",
             "??", "??", "??", "??", "?", "??", "??", "????", "??", "?", "??", "??", "??", "??", "??", "??",
             "????", "??", "??", "??", "??", "??", "??", "???", "??", "???", "??", "????", "?", "--", "??",
             "??", "???", "?", "?", "??", "??", "??", "??", "??", "????", "??", "??", "??", "??", "??", "??",
             "????", "?", "??", "???", "?", "??", "??",
             "??", "??", "??", "?", "???", "??", "??", "?", "????", "??", "?", "??", "??", "?", "?", "?", "?",
             "??", "??", "??", "??", "??", "???", "??", "?", "??", "?", "?", "??", "????", "????", "????", "??",
             "??", "?", "??", "?", "??", "??", "??", "?", "??", "??", "??", "?", "??", "?", "??", "?", "????",
             "??", "??", "?", "??", "??", "?", "?", "??",
             "??", "??", "??", "??", "??", "??", "?", "?", "??", "??", "??", "???", "??", "?", "?", "??",
             "?????", "??", "????", "??", "??", "???", "??", "????", "?...?", "??", "??", "??", "??", "??",
             "????", "??", "??", "??", "???", "??", "?", "??", "?", "??", "?????", "??", "?", "?", "??", "??",
             "?", "??", "????", "???", "??", "?", "?", "?", "?", "??", "??", "?", "??", "??", "???", "??", "??",
             "?", "??", "??...??", "??", "?", "??", "??", "??", "?", "??", "??", "??", "??", "??", "?", "??",
             "??", "??", "???", "??", "???", "??", "??", "??", "??", "??", "??", "??", "??", "??", "????", "?",
             "??", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??", "????", "?", "??",
             "??", "??", "??", "??", "???", "??", "??", "??", "??", "???", "??", "??", "??", "??", "??", "???",
             "????", "??", "??", "????", "??", "??", "??", "??", "??", "???", "??", "?", "?", "??", "??",
             "????", "??", "??", "??", "?", "??", "?", "??", "?", "?", "??", "??", "??", "??", "??", "??", "?",
             "??", "??", "??", "??", "????", "??", "??", "??", "?", ">>", "??", "??", "??", "??", "??", "???",
             "????", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "??", "????",
             "??", "??", "??", "??", "??", "??", "??", "???", "??", "??", "??", "??", "??", "a", "able",
             "about", "above", "according", "accordingly", "across", "actually", "after", "afterwards", "again",
             "against", "ain't", "all", "allow", "allows", "almost", "alone", "along", "already", "also",
             "although", "always", "am", "among", "amongst", "an", "and", "another", "any", "anybody", "anyhow",
             "anyone", "anything", "anyway", "anyways", "anywhere", "apart", "appear", "appreciate",
             "appropriate", "are", "aren't", "around", "as", "a's", "aside", "ask", "asking", "associated",
             "at", "available", "away", "awfully", "be", "became", "because", "become", "becomes", "becoming",
             "been", "before", "beforehand", "behind", "being", "believe", "below", "beside", "besides", "best",
             "better", "between", "beyond", "both", "brief", "but", "by", "came", "can", "cannot", "cant",
             "can't", "cause", "causes", "certain", "certainly", "changes", "clearly", "c'mon", "co", "com",
             "come", "comes", "concerning", "consequently", "consider", "considering", "contain", "containing",
             "contains", "corresponding", "could", "couldn't", "course", "c's", "currently", "definitely",
             "described", "despite", "did", "didn't", "different", "do", "does", "doesn't", "doing", "done",
             "don't", "down", "downwards", "during", "each", "edu", "eg", "eight", "either", "else",
             "elsewhere", "enough", "entirely", "especially", "et", "etc", "even", "ever", "every", "everybody",
             "everyone", "everything", "everywhere", "ex", "exactly", "example", "except", "far", "few",
             "fifth", "first", "five", "followed", "following", "follows", "for", "former", "formerly", "forth",
             "four", "from", "further", "furthermore", "get", "gets", "getting", "given", "gives", "go", "goes",
             "going", "gone", "got", "gotten", "greetings", "had", "hadn't", "happens", "hardly", "has",
             "hasn't", "have", "haven't", "having", "he", "hello", "help", "hence", "her", "here", "hereafter",
             "hereby", "herein", "here's", "hereupon", "hers", "herself", "he's", "hi", "him", "himself", "his",
             "hither", "hopefully", "how", "howbeit", "however", "i'd", "ie", "if", "ignored", "i'll", "i'm",
             "immediate", "in", "inasmuch", "inc", "indeed", "indicate", "indicated", "indicates", "inner",
             "insofar", "instead", "into", "inward", "is", "isn't", "it", "it'd", "it'll", "its", "it's",
             "itself", "i've", "just", "keep", "keeps", "kept", "know", "known", "knows", "last", "lately",
             "later", "latter", "latterly", "least", "less", "lest", "let", "let's", "like", "liked", "likely",
             "little", "look", "looking", "looks", "ltd", "mainly", "many", "may", "maybe", "me", "mean",
             "meanwhile", "merely", "might", "more", "moreover", "most", "mostly", "much", "must", "my",
             "myself", "name", "namely", "nd", "near", "nearly", "necessary", "need", "needs", "neither",
             "never", "nevertheless", "new", "next", "nine", "no", "nobody", "non", "none", "noone", "nor",
             "normally", "not", "nothing", "novel", "now", "nowhere", "obviously", "of", "off", "often", "oh",
             "ok", "okay", "old", "on", "once", "one",
             "ones", "only", "onto", "or", "other", "others", "otherwise", "ought", "our", "ours", "ourselves",
             "out", "outside", "over", "overall", "own", "particular", "particularly", "per", "perhaps",
             "placed", "please", "plus", "possible", "presumably", "probably", "provides", "que", "quite", "qv",
             "rather", "rd", "re", "really", "reasonably", "regarding", "regardless", "regards", "relatively",
             "respectively", "right", "said", "same", "saw", "say", "saying", "says", "second", "secondly",
             "see", "seeing", "seem", "seemed", "seeming", "seems", "seen", "self", "selves", "sensible",
             "sent", "serious", "seriously", "seven", "several", "shall", "she", "should", "shouldn't", "since",
             "six", "so", "some", "somebody", "somehow", "someone", "something", "sometime", "sometimes",
             "somewhat", "somewhere", "soon", "sorry", "specified", "specify", "specifying", "still", "sub",
             "such", "sup", "sure", "take", "taken", "tell", "tends", "th", "than", "thank", "thanks", "thanx",
             "that", "thats", "that's", "the", "their", "theirs", "them", "themselves", "then", "thence",
             "there", "thereafter", "thereby", "therefore", "therein", "theres", "there's", "thereupon",
             "these", "they", "they'd", "they'll", "they're", "they've", "think", "third", "this", "thorough",
             "thoroughly", "those", "though", "three", "through", "throughout", "thru", "thus", "to",
             "together", "too", "took", "toward", "towards", "tried", "tries", "truly", "try", "trying", "t's",
             "twice", "two", "un", "under", "unfortunately", "unless", "unlikely", "until", "unto", "up",
             "upon", "us", "use", "used", "useful", "uses", "using", "usually", "value", "various", "very",
             "via", "viz", "vs", "want", "wants", "was", "wasn't", "way", "we", "we'd", "welcome", "well",
             "we'll", "went", "were", "we're", "weren't", "we've", "what", "whatever", "what's", "when",
             "whence", "whenever", "where", "whereafter", "whereas", "whereby", "wherein", "where's",
             "whereupon", "wherever", "whether", "which", "while", "whither", "who", "whoever", "whole", "whom",
             "who's", "whose", "why", "will", "willing", "wish", "with", "within", "without", "wonder", "won't",
             "would", "wouldn't", "yes", "yet", "you", "you'd", "you'll", "your", "you're", "yours", "yourself",
             "yourselves", "you've", "zero", "zt", "ZT", "zz", "ZZ", "?", "??", "??", "??", "??", "??", "??",
             "???", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??",
             "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??",
             "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??",
             "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "??", "????", "??", "?", "??", "??",
             "??", "?", "??", "??", "??", "??", "??", "?", "?", "??", "??", "???", "???", "??", "??", "??",
             "??", "??", "?", "??", "?", "?", "??", "??", "??", "??", "???", "??", "??", "?", "?", "?", "??",
             "??", "??", "?", "??", "??", "?", "??", "???", "??", "??", "??", "??", "??", "??", "???", "??",
             "??", "??", "??", "??", "??", "?", "??", "??", "?", "??", "??", "??", "??", "?", "??", "??", "??",
             "??", "??", "??", "??", "??", "??", "??", "??", "??", "???", "??", "?", "?", "??", "??", "??",
             "??", "??", "??", "??", "?", "??", "?", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??",
             "?", "??", "??", "??", "??", "?", "??", "?", "??", "??", "??", "??", "??", "??", "??", "??", "?",
             "??", "??", "??", "??", "??", "??", "??", "?", "??", "??", "?", "??", "??", "??", "??", "??", "??",
             "??", "??", "??", "????", "????", "??", "??", "??", "?", "?", "??", "??", "??", "?", "??", "??",
             "?", "??", "??", "??", "??", "??", "?", "?", "??", "??", "?", "??", "??", "??", "??", "??", "??",
             "??", "??", "??", "?", "??", "??", "??", "??", "??", "??", "??", "?", "?", "??", "??", "??", "??",
             "??", "??", "??", "???", "????", "??", "??", "??", "?", "????", "??", "??", "??", "??", "??", "?",
             "??", "??", "??", "?", "??", "??", "??", "??", "?", "??", "??",
             "??", "??", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??", "?", "??", "?", "?", "??",
             "?", "??", "?", "?", "?", "?", "?", "?", "??", "?", "??", "?", "?", "??", "?", "?", "?", "?", "?",
             "??", "?", "?", "?", "??", "?", "?", "??", "??", "?", "?", "?", "?", "?", "??", "??", "??", "??",
             "??", "??", "??", "??", "??", "?", "??", "?", "?", "?", "?", "?", "??", "?", "?", "??", "??", "?",
             "?", "?", "?", "??", "?", "?", "?", "?", "?", "??", "??", "??", "??", "?", "??", "?", "??", "??",
             "??", "??", "??", "?", "??", "??", "??", "??", "???", "??", "??", "??", "??", "??", "??", "?",
             "??", "??", "??", "??", "?", "????", "??", "??", "??", "??", "??", "??", "??", "?", "??", "??",
             "??", "?", "??", "???", "??", "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "??", "?",
             "??", "??", "??", "??", "?", "??", "???", "?", "??", "??", "??", "??", "??", "??", "?", "??", "??",
             "??", "?", "??", "???", "??", "???", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??",
             "??", "?", "?", "??", "??", "??", "??", "??", "??", "?", "??", "?", "??", "?", "??", "??", "?",
             "??", "??", "??", "??", "??", "??", "?", "??", "???", "???", "??", "??", "??", "??", "????",
             "????", "????", "??", "????", "????", "?", "??", "??", "??", "??", "?", "??", "??", "?", "??",
             "??", "??", "?", "??", "??", "??", "?", "??", "?", "??", "?", "?", "??", "????", "???", "?", "??",
             "??", "??", "?", "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??",
             "?", "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??", "??", "?",
             "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "?", "?", "??", "?", "??", "?",
             "??", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "??",
             "??", "??", "?", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??", "?", "??", "??", "??",
             "??", "??", "??", "?", "??", "??", "??", "??", "?", "??", "???", "??", "??", "??", "??", "??",
             "??", "??", "?", "?", "??", "????", "?", "??", "??", "??", "??", "??", "??", "??", "??", "??",
             "????", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "?", "??",
             "??", "?", "??", "??", "??", "??", "??", "?", "?", "??", "?", "???", "?", "??", "??", "??", "??",
             "??", "?", "??", "??", "??", "??", "?", "??", "??", "??", "??", "????", "??", "??", "?", "?", "??",
             "??", "??", "??", "??", "??", "??", "?", "??", "??", "?", "?", "???", "??", "???", "??", "??",
             "??", "?", "??", "??", "?", "??", "??", "??", "??", "??", "?", "??", "??", "??", "??", "??", "??",
             "??", "?", "?", "??", "???", "???", "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "?",
             "??", "??", "?", "??", "??", "?", "??", "?", "?", "??", "??", "?", "??", "??", "?", "??", "??",
             "??", "?", "??", "?", "??", "??", "?", "??", "??", "??", "??", "??", "?", "??", "??", "???", "???",
             "????", "??", "???", "??", "????", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??",
             "??", "?", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "?", "??", "??",
             "???", "???", "??", "???", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??",
             "??", "??", "??", "??", "?", "??", "??", "?", "??", "????", "??", "?", "??", "??", "??", "??",
             "??", "??", "??", "?", "?", "??", "??", "??", "???", "??"};

string filt(const string& str) {
	string str_new = str;
	for (int i = 0; i < 26; i++) {
		int index = str_new.find(syntax[i]);
		while (index!=-1)
			str_new = str_new.replace(index, index+syntax[i].length(), ",");
	}
	// for (string stopword : stopwords) {
	// 	while (str_new.find(stopword)!=-1)
	// 		str_new = str_new.replace(str_new.find(stopword), str_new.find(stopword)+stopword.length(), ",");
	// }

	return str_new;
}

string getcomments(const string& str) {
	string str_new = str;
	int index = str.find("//");
	if (index!=-1)
		str_new = str_new.substr(0, index);
	index = str.find("O");
	if (index!=-1)
		str_new = str_new.substr(0, index);
	index = str.find("[?");
	if (index!=-1)
		str_new = str_new.substr(0, index);
	index = str.find("??");
	if (index!=-1)
		str_new = str_new.substr(0, index);
	index = str.find(":");
	if (index!=-1)
		str_new = str_new.substr(0, index);
	index = str.find("*");
	if (index!=-1)
		str_new = str_new.substr(index + 2, str_new.length());
	index = str.find("/");
	if (index!=-1)
		str_new = str_new.substr(index + 2, str_new.length());
	index = str.find("??");
	if (index!=-1)
		str_new = str_new.substr(index + 2, str_new.length());
	return filt(str_new);
}

string getcontent(const string& str, string* list) try {
	string str_new = "";
	istringstream iss(str);
    int flag = 0;
	string temp = "";

    while (getline(iss, temp, ',')) {
        flag++;
		if (flag>20)
			return "";
		if (flag==5) {
			str_new = getcomments(temp);
			list[flag-1] = str_new;
		}
		else {
			list[flag-1] = temp;
		}
    }

	return str_new;
} catch (...) {
	return "";
}

class Tweet {
private:
	string _id;
	string longid;
	string ID;
	string NickNmae;
	string Content;
	string PubTime;
	string Tools;
	string Like;
	string Comment;
	string Transfer;
	string PageLink;
	string Favorite;
	string provincecode;
	string citycode;
	string province;
	string city;
	string mediapiclist;
	string mediaarticle;
	string mediamusic;
	string mediavideo;
public:
	Tweet(string _id, string longid, string ID, string NickNmae, string Content, string PubTime, string Tools, string Like, 
		string Comment, string Transfer, string PageLink, string Favorite, string provincecode, string citycode, string province,
		string city, string mediapiclist, string mediaarticle, string mediamusic, string mediavideo) {
		this->_id = _id;
		this->longid = longid;
		this->ID = ID;
		this->NickNmae = NickNmae;
		this->Content = Content;
		this->PubTime = PubTime;
		this->Tools = Tools;
		this->Like = Like;
		this->Comment = Comment;
		this->Transfer = Transfer;
		this->PageLink = PageLink;
		this->Favorite = Favorite;
		this->provincecode = provincecode;
		this->citycode = citycode;
		this->province = province;
		this->city = city;
		this->mediapiclist = mediapiclist;
		this->mediaarticle = mediaarticle;
		this->mediamusic = mediamusic;
		this->mediavideo = mediavideo;
	}
	bool sameYear(string comp) {
		return this->PubTime.substr(0,4).compare(comp)==0;
	}
	string year() {
		return this->PubTime.substr(0,4);
	}
	string print() {
		return "{\"id\":\"" + this->_id + "\",\"longid\":\"" + this->longid
			+ "\",\"ID\":\"" + this->ID + "\",\"NickNmae\":\"" + this->NickNmae
			+ "\",\"Content\":\"" + this->Content + "\",\"PubTime\":\"" + this->PubTime
			+ "\",\"Tools\":\"" + this->Tools + "\",\"Like\":\"" + this->Like
			+ "\",\"Comment\":\"" + this->Comment + "\",\"Transfer\":\"" + this->Transfer
			+ "\",\"PageLink\":\"" + this->PageLink + "\",\"Favorite\":\"" + this->Favorite
			+ "\",\"provincecode\":\"" + this->provincecode + "\",\"citycode\":\"" + this->citycode
			+ "\",\"province\":\"" + this->province + "\",\"city\":\"" + this->city
			+ "\",\"mediapiclist\":\"" + this->mediapiclist + "\",\"mediaarticle\":\"" + this->mediaarticle
			+ "\",\"mediamusic\":\"" + this->mediamusic + "\",\"mediavideo\":\"" + this->mediavideo + "\"}";
	}
	string content() {
		return this->Content;
	}
};

int main() {
	vector< vector<Tweet> > all;
    ifstream fin;
    fin.open("../../dataWenchuan/Tweets_wenchuan_512.csv");
    if (!fin.is_open()) {
		cerr << "Can't open this file. ";
		
		return -1;
	}
    string str, _s;
	string year = "";
	int now = -1;

	while (!fin.eof()) {
		getline(fin, _s);
		string list[20];
		str = getcontent(_s, list);
		if (!str.empty() && str.length() >= 4) {
			cout << str << endl;
			year = list[5].substr(0, 4);
			int flag = -1;
			for (vector< vector<Tweet> >::iterator it = all.begin(); it < all.end(); it++) {
				if ((*it)[0].sameYear(year)) {
					flag = it - all.begin();
					break;
				}
			}
			if (flag==-1) {
				vector<Tweet> first;
				first.push_back(*(new Tweet(list[0], list[1], list[2], list[3], str, list[5], list[6], list[7], list[8], list[9],
					list[10], list[11], list[12], list[13], list[14], list[15], list[16], list[17], list[18], list[19])));
				all.push_back(first);
			}
			else {
				all[flag].push_back(*(new Tweet(list[0], list[1], list[2], list[3], str, list[5], list[6], list[7], list[8], list[9],
					list[10], list[11], list[12], list[13], list[14], list[15], list[16], list[17], list[18], list[19])));
			}
		}
	}

    fin.close();

	now = -1;

	ofstream fout;
	fout.open("../../dataWenchuan/word2011.dat");
	// fout << "[";
	for (vector< vector<Tweet> >::iterator it = all.begin(); it < all.end(); it++) {
		if (((*it)[0].year()).compare("2011") != 0)
			continue;
		// fout << "{\"year\":\"" << (*it)[0].year() << "\",\"data\":[";
		// for (vector<Tweet>::iterator i = (*it).begin(); i < (*it).end(); i++) {
		// 	fout << (*i).print();
		// 	if (i != (*it).end() - 1)
		// 		fout << ",";
		// }
		// fout << "]";
		// if (it < all.end() - 1)
		// 	fout << "," << endl;
		// cout << ++now << endl;
		for (vector<Tweet>::iterator i = (*it).begin(); i < (*it).end(); i++) {
			fout << (*i).content();
			if (i != (*it).end() - 1)
				fout << endl;
		}
	}
	// fout << "]" << endl;
	fout.close();

    return 0;
}